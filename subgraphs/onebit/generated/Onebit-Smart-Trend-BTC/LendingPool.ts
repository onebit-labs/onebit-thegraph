// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get onBehalfOf(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get referral(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class FundAddressUpdated extends ethereum.Event {
  get params(): FundAddressUpdated__Params {
    return new FundAddressUpdated__Params(this);
  }
}

export class FundAddressUpdated__Params {
  _event: FundAddressUpdated;

  constructor(event: FundAddressUpdated) {
    this._event = event;
  }

  get newFundAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FundDeposit extends ethereum.Event {
  get params(): FundDeposit__Params {
    return new FundDeposit__Params(this);
  }
}

export class FundDeposit__Params {
  _event: FundDeposit;

  constructor(event: FundDeposit) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FundWithdraw extends ethereum.Event {
  get params(): FundWithdraw__Params {
    return new FundWithdraw__Params(this);
  }
}

export class FundWithdraw__Params {
  _event: FundWithdraw;

  constructor(event: FundWithdraw) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NetValueUpdated extends ethereum.Event {
  get params(): NetValueUpdated__Params {
    return new NetValueUpdated__Params(this);
  }
}

export class NetValueUpdated__Params {
  _event: NetValueUpdated;

  constructor(event: NetValueUpdated) {
    this._event = event;
  }

  get previousNetValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newNetValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get previousLiquidityIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newLiquidityIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get currentLiquidityRate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }
}

export class PeriodInitialized extends ethereum.Event {
  get params(): PeriodInitialized__Params {
    return new PeriodInitialized__Params(this);
  }
}

export class PeriodInitialized__Params {
  _event: PeriodInitialized;

  constructor(event: PeriodInitialized) {
    this._event = event;
  }

  get previousLiquidityIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get purchaseBeginTimestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get purchaseEndTimestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get redemptionBeginTimestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get managementFeeRate(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get performanceFeeRate(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class PurchaseEndTimestampMoved extends ethereum.Event {
  get params(): PurchaseEndTimestampMoved__Params {
    return new PurchaseEndTimestampMoved__Params(this);
  }
}

export class PurchaseEndTimestampMoved__Params {
  _event: PurchaseEndTimestampMoved;

  constructor(event: PurchaseEndTimestampMoved) {
    this._event = event;
  }

  get previousTimestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newTimetamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RedemptionBeginTimestampMoved extends ethereum.Event {
  get params(): RedemptionBeginTimestampMoved__Params {
    return new RedemptionBeginTimestampMoved__Params(this);
  }
}

export class RedemptionBeginTimestampMoved__Params {
  _event: RedemptionBeginTimestampMoved;

  constructor(event: RedemptionBeginTimestampMoved) {
    this._event = event;
  }

  get previousTimestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newTimetamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LendingPool__getConfigurationResultValue0Struct extends ethereum.Tuple {
  get data(): BigInt {
    return this[0].toBigInt();
  }
}

export class LendingPool__getReserveDataResultValue0Struct extends ethereum.Tuple {
  get configuration(): LendingPool__getReserveDataResultValue0ConfigurationStruct {
    return changetype<
      LendingPool__getReserveDataResultValue0ConfigurationStruct
    >(this[0].toTuple());
  }

  get liquidityIndex(): BigInt {
    return this[1].toBigInt();
  }

  get currentLiquidityRate(): BigInt {
    return this[2].toBigInt();
  }

  get previousLiquidityIndex(): BigInt {
    return this[3].toBigInt();
  }

  get purchaseUpperLimit(): BigInt {
    return this[4].toBigInt();
  }

  get lastUpdateTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get purchaseBeginTimestamp(): BigInt {
    return this[6].toBigInt();
  }

  get purchaseEndTimestamp(): BigInt {
    return this[7].toBigInt();
  }

  get redemptionBeginTimestamp(): BigInt {
    return this[8].toBigInt();
  }

  get managementFeeRate(): i32 {
    return this[9].toI32();
  }

  get performanceFeeRate(): i32 {
    return this[10].toI32();
  }

  get oTokenAddress(): Address {
    return this[11].toAddress();
  }

  get fundAddress(): Address {
    return this[12].toAddress();
  }

  get softUpperLimit(): BigInt {
    return this[13].toBigInt();
  }
}

export class LendingPool__getReserveDataResultValue0ConfigurationStruct extends ethereum.Tuple {
  get data(): BigInt {
    return this[0].toBigInt();
  }
}

export class LendingPool extends ethereum.SmartContract {
  static bind(address: Address): LendingPool {
    return new LendingPool("LendingPool", address);
  }

  LENDINGPOOL_REVISION(): BigInt {
    let result = super.call(
      "LENDINGPOOL_REVISION",
      "LENDINGPOOL_REVISION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_LENDINGPOOL_REVISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "LENDINGPOOL_REVISION",
      "LENDINGPOOL_REVISION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deposit(amount: BigInt, onBehalfOf: Address, referralCode: i32): BigInt {
    let result = super.call(
      "deposit",
      "deposit(uint256,address,uint16):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromAddress(onBehalfOf),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(referralCode))
      ]
    );

    return result[0].toBigInt();
  }

  try_deposit(
    amount: BigInt,
    onBehalfOf: Address,
    referralCode: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "deposit",
      "deposit(uint256,address,uint16):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromAddress(onBehalfOf),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(referralCode))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAddressesProvider(): Address {
    let result = super.call(
      "getAddressesProvider",
      "getAddressesProvider():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getAddressesProvider(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAddressesProvider",
      "getAddressesProvider():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getConfiguration(): LendingPool__getConfigurationResultValue0Struct {
    let result = super.call(
      "getConfiguration",
      "getConfiguration():((uint256))",
      []
    );

    return changetype<LendingPool__getConfigurationResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getConfiguration(): ethereum.CallResult<
    LendingPool__getConfigurationResultValue0Struct
  > {
    let result = super.tryCall(
      "getConfiguration",
      "getConfiguration():((uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<LendingPool__getConfigurationResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getReserveData(): LendingPool__getReserveDataResultValue0Struct {
    let result = super.call(
      "getReserveData",
      "getReserveData():(((uint256),uint128,int128,uint128,uint128,uint40,uint40,uint40,uint40,uint16,uint16,address,address,uint128))",
      []
    );

    return changetype<LendingPool__getReserveDataResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getReserveData(): ethereum.CallResult<
    LendingPool__getReserveDataResultValue0Struct
  > {
    let result = super.tryCall(
      "getReserveData",
      "getReserveData():(((uint256),uint128,int128,uint128,uint128,uint40,uint40,uint40,uint40,uint16,uint16,address,address,uint128))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<LendingPool__getReserveDataResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getReserveNormalizedIncome(): BigInt {
    let result = super.call(
      "getReserveNormalizedIncome",
      "getReserveNormalizedIncome():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getReserveNormalizedIncome(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getReserveNormalizedIncome",
      "getReserveNormalizedIncome():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  withdraw(amount: BigInt, to: Address): BigInt {
    let result = super.call("withdraw", "withdraw(uint256,address):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount),
      ethereum.Value.fromAddress(to)
    ]);

    return result[0].toBigInt();
  }

  try_withdraw(amount: BigInt, to: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdraw",
      "withdraw(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromAddress(to)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawFund(amount: BigInt): BigInt {
    let result = super.call("withdrawFund", "withdrawFund(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBigInt();
  }

  try_withdrawFund(amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawFund",
      "withdrawFund(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get onBehalfOf(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get referralCode(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositFundCall extends ethereum.Call {
  get inputs(): DepositFundCall__Inputs {
    return new DepositFundCall__Inputs(this);
  }

  get outputs(): DepositFundCall__Outputs {
    return new DepositFundCall__Outputs(this);
  }
}

export class DepositFundCall__Inputs {
  _call: DepositFundCall;

  constructor(call: DepositFundCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositFundCall__Outputs {
  _call: DepositFundCall;

  constructor(call: DepositFundCall) {
    this._call = call;
  }
}

export class InitReserveCall extends ethereum.Call {
  get inputs(): InitReserveCall__Inputs {
    return new InitReserveCall__Inputs(this);
  }

  get outputs(): InitReserveCall__Outputs {
    return new InitReserveCall__Outputs(this);
  }
}

export class InitReserveCall__Inputs {
  _call: InitReserveCall;

  constructor(call: InitReserveCall) {
    this._call = call;
  }

  get oToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get fundAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitReserveCall__Outputs {
  _call: InitReserveCall;

  constructor(call: InitReserveCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get provider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeNextPeriodCall extends ethereum.Call {
  get inputs(): InitializeNextPeriodCall__Inputs {
    return new InitializeNextPeriodCall__Inputs(this);
  }

  get outputs(): InitializeNextPeriodCall__Outputs {
    return new InitializeNextPeriodCall__Outputs(this);
  }
}

export class InitializeNextPeriodCall__Inputs {
  _call: InitializeNextPeriodCall;

  constructor(call: InitializeNextPeriodCall) {
    this._call = call;
  }

  get managementFeeRate(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get performanceFeeRate(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get purchaseUpperLimit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get softUpperLimit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get purchaseBeginTimestamp(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get purchaseEndTimestamp(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get redemptionBeginTimestamp(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class InitializeNextPeriodCall__Outputs {
  _call: InitializeNextPeriodCall;

  constructor(call: InitializeNextPeriodCall) {
    this._call = call;
  }
}

export class MoveTheLockPeriodCall extends ethereum.Call {
  get inputs(): MoveTheLockPeriodCall__Inputs {
    return new MoveTheLockPeriodCall__Inputs(this);
  }

  get outputs(): MoveTheLockPeriodCall__Outputs {
    return new MoveTheLockPeriodCall__Outputs(this);
  }
}

export class MoveTheLockPeriodCall__Inputs {
  _call: MoveTheLockPeriodCall;

  constructor(call: MoveTheLockPeriodCall) {
    this._call = call;
  }

  get newPurchaseEndTimestamp(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MoveTheLockPeriodCall__Outputs {
  _call: MoveTheLockPeriodCall;

  constructor(call: MoveTheLockPeriodCall) {
    this._call = call;
  }
}

export class MoveTheRedemptionPeriodCall extends ethereum.Call {
  get inputs(): MoveTheRedemptionPeriodCall__Inputs {
    return new MoveTheRedemptionPeriodCall__Inputs(this);
  }

  get outputs(): MoveTheRedemptionPeriodCall__Outputs {
    return new MoveTheRedemptionPeriodCall__Outputs(this);
  }
}

export class MoveTheRedemptionPeriodCall__Inputs {
  _call: MoveTheRedemptionPeriodCall;

  constructor(call: MoveTheRedemptionPeriodCall) {
    this._call = call;
  }

  get newRedemptionBeginTimestamp(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MoveTheRedemptionPeriodCall__Outputs {
  _call: MoveTheRedemptionPeriodCall;

  constructor(call: MoveTheRedemptionPeriodCall) {
    this._call = call;
  }
}

export class SetConfigurationCall extends ethereum.Call {
  get inputs(): SetConfigurationCall__Inputs {
    return new SetConfigurationCall__Inputs(this);
  }

  get outputs(): SetConfigurationCall__Outputs {
    return new SetConfigurationCall__Outputs(this);
  }
}

export class SetConfigurationCall__Inputs {
  _call: SetConfigurationCall;

  constructor(call: SetConfigurationCall) {
    this._call = call;
  }

  get configuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetConfigurationCall__Outputs {
  _call: SetConfigurationCall;

  constructor(call: SetConfigurationCall) {
    this._call = call;
  }
}

export class SetPauseCall extends ethereum.Call {
  get inputs(): SetPauseCall__Inputs {
    return new SetPauseCall__Inputs(this);
  }

  get outputs(): SetPauseCall__Outputs {
    return new SetPauseCall__Outputs(this);
  }
}

export class SetPauseCall__Inputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }

  get val(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPauseCall__Outputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }
}

export class UpdateFuncAddressCall extends ethereum.Call {
  get inputs(): UpdateFuncAddressCall__Inputs {
    return new UpdateFuncAddressCall__Inputs(this);
  }

  get outputs(): UpdateFuncAddressCall__Outputs {
    return new UpdateFuncAddressCall__Outputs(this);
  }
}

export class UpdateFuncAddressCall__Inputs {
  _call: UpdateFuncAddressCall;

  constructor(call: UpdateFuncAddressCall) {
    this._call = call;
  }

  get fundAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateFuncAddressCall__Outputs {
  _call: UpdateFuncAddressCall;

  constructor(call: UpdateFuncAddressCall) {
    this._call = call;
  }
}

export class UpdateNetValueCall extends ethereum.Call {
  get inputs(): UpdateNetValueCall__Inputs {
    return new UpdateNetValueCall__Inputs(this);
  }

  get outputs(): UpdateNetValueCall__Outputs {
    return new UpdateNetValueCall__Outputs(this);
  }
}

export class UpdateNetValueCall__Inputs {
  _call: UpdateNetValueCall;

  constructor(call: UpdateNetValueCall) {
    this._call = call;
  }

  get netValue(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateNetValueCall__Outputs {
  _call: UpdateNetValueCall;

  constructor(call: UpdateNetValueCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawFundCall extends ethereum.Call {
  get inputs(): WithdrawFundCall__Inputs {
    return new WithdrawFundCall__Inputs(this);
  }

  get outputs(): WithdrawFundCall__Outputs {
    return new WithdrawFundCall__Outputs(this);
  }
}

export class WithdrawFundCall__Inputs {
  _call: WithdrawFundCall;

  constructor(call: WithdrawFundCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawFundCall__Outputs {
  _call: WithdrawFundCall;

  constructor(call: WithdrawFundCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

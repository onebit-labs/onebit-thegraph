type lendingPool @entity {
  id: ID! # LendingPoolAddress
  term: Int!
  depositors: [Bytes!]!
  lastUpdateTimestamp: Int!
  liquidityRate: BigInt!
  oTokenAddress: Bytes! #oTokenAddress
}

type netValue @entity {
  id: ID!
  lendingPool: Bytes #LendingPoolAddress
  previousNetValue: BigInt!
  newNetValue: BigInt!
  previousLiquidityIndex: BigInt!
  newLiquidityIndex: BigInt!
  currentLiquidityRate: BigInt!
  createTimestamp: Int!
}

type transaction @entity {
  id: ID!
  lendingPool: Bytes #LendingPoolAddress
  type: Int! # 1:deposit, 2:withdraw
  account: Bytes!
  amount: BigInt!
  createTimestamp: Int!
}

type portfolioTerm @entity {
  id: ID!
  lendingPool: Bytes #LendingPoolAddress
  value: BigInt!
  term: Int!
  createTimestamp: Int!
  redemptionBeginTimestamp: Int!
  purchaseBeginTimestamp: Int!
  purchaseEndTimestamp: Int!
  previousLiquidityIndex: BigInt!
  managementFeeRate: Int!
  performanceFeeRate: Int!
  previousDepositors: Int!
}

type depositor @entity {
  id: ID! #lendingPool+account
  account: Bytes!
  lendingPool: Bytes! #LendingPoolAddress
  oTokenAddress: Bytes! #oTokenAddress
  createTimestamp: Int!
  lastUpdateTimestamp: Int!
}
